# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2c3583cb-9935-4097-b745-678382d70c38'
  imageRepository: 'terraformaksdevclusterregistry1234'
  containerRegistry: 'terraformaksdevclusterregistry1234.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  IMAGE_TAG: '$(Build.BuildNumber)-$(Build.SourceBranchName)'
  K8S_NAMESPACE: 'default'
  repositoryname: 'java-app'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
stages:
- stage: Build
  variables:
  - template: variables.yml
  jobs:
  - job: Build
    steps:
    - script: |
        echo $(webAppName)
        mvn clean package
        echo "Original build number: $(Build.BuildNumber)"
        echo "Modified build number: $(buildNumber)"
      displayName: 'Build and push Docker image'
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: '**/*.jar'
        TargetFolder: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed()
      
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.artifactstagingdirectory)'
      condition: succeededOrFailed()
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Build.artifactstagingdirectory)'
      condition: succeededOrFailed()

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
         echo $(System.DefaultWorkingDirectory)    
         ls -ltr $(System.DefaultWorkingDirectory)
         ls -ltr $(Build.artifactstagingdirectory)/target
        failOnStderr: true
- stage: Build_Docker
  displayName: Build and push stage
  jobs:
  - job: Build_Docker
    displayName: Build_Docker
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(repositoryname)
        dockerfile: $(Build.SourcesDirectory)/Dockerfile
        tags: |
          $(IMAGE_TAG)
        containerRegistry: $(imageRepository)
        buildContext: $(Build.SourcesDirectory)
        push: true
    - task: Kubernetes@1
      displayName: 'Apply Kubernetes deployment'
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: $(KubernetesConnection)
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.SourcesDirectory)/DeploymentFiles/Deployment.yaml'
        arguments: '--namespace $(K8S_NAMESPACE)'